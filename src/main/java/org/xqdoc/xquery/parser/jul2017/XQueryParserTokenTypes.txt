// $ANTLR 2.7.7 (2006-11-01): XQuery.g -> XQueryParserTokenTypes.txt$
XQueryParser    // output token vocab name
LITERAL_xquery="xquery"=4
LITERAL_version="version"=5
LITERAL_module="module"=6
LITERAL_namespace="namespace"=7
STRING_LITERAL=8
LITERAL_encoding="encoding"=9
EQ=10
LITERAL_declare="declare"=11
"boundary-space"=12
LITERAL_default="default"=13
LITERAL_collation="collation"=14
"base-uri"=15
LITERAL_construction="construction"=16
LITERAL_ordering="ordering"=17
LITERAL_order="order"=18
"copy-namespaces"=19
LITERAL_import="import"=20
LITERAL_schema="schema"=21
LITERAL_element="element"=22
LITERAL_function="function"=23
LITERAL_variable="variable"=24
LITERAL_option="option"=25
SEMICOLON=26
LITERAL_preserve="preserve"=27
LITERAL_strip="strip"=28
LITERAL_ordered="ordered"=29
LITERAL_unordered="unordered"=30
LITERAL_empty="empty"=31
LITERAL_greatest="greatest"=32
LITERAL_least="least"=33
"no-preserve"=34
COMMA=35
LITERAL_inherit="inherit"=36
"no-inherit"=37
LITERAL_at="at"=38
DOLLAR=39
COLON=40
LITERAL_external="external"=41
MOD=42
LPAREN("'('")=43
RPAREN("')'")=44
LITERAL_as="as"=45
LCURLY=46
RCURLY=47
ARROW=48
BANG=49
LITERAL_for="for"=50
LITERAL_let="let"=51
LITERAL_some="some"=52
LITERAL_every="every"=53
LITERAL_switch="switch"=54
LITERAL_typeswitch="typeswitch"=55
LITERAL_update="update"=56
LITERAL_replace="replace"=57
LITERAL_value="value"=58
LITERAL_insert="insert"=59
LITERAL_delete="delete"=60
LITERAL_rename="rename"=61
LITERAL_if="if"=62
LITERAL_try="try"=63
LITERAL_catch="catch"=64
LITERAL_with="with"=65
LITERAL_into="into"=66
LITERAL_preceding="preceding"=67
LITERAL_following="following"=68
LITERAL_return="return"=69
LITERAL_in="in"=70
LITERAL_where="where"=71
LITERAL_stable="stable"=72
LITERAL_by="by"=73
LITERAL_ascending="ascending"=74
LITERAL_descending="descending"=75
LITERAL_satisfies="satisfies"=76
LITERAL_case="case"=77
LITERAL_then="then"=78
LITERAL_else="else"=79
LITERAL_or="or"=80
LITERAL_and="and"=81
LT=82
GT=83
LITERAL_eq="eq"=84
LITERAL_ne="ne"=85
LITERAL_lt="lt"=86
LITERAL_le="le"=87
LITERAL_gt="gt"=88
LITERAL_ge="ge"=89
NEQ=90
GTEQ=91
LTEQ=92
LITERAL_is="is"=93
CONCAT=94
LITERAL_to="to"=95
PLUS=96
MINUS=97
STAR=98
LITERAL_div="div"=99
LITERAL_idiv="idiv"=100
LITERAL_mod="mod"=101
LITERAL_union="union"=102
UNION=103
LITERAL_intersect="intersect"=104
LITERAL_except="except"=105
LITERAL_instance="instance"=106
LITERAL_of="of"=107
LITERAL_treat="treat"=108
LITERAL_castable="castable"=109
LITERAL_cast="cast"=110
LITERAL_validate="validate"=111
PRAGMA=112
SLASH=113
DSLASH=114
LITERAL_text="text"=115
LITERAL_node="node"=116
LITERAL_attribute="attribute"=117
LITERAL_comment="comment"=118
"processing-instruction"=119
"document-node"=120
"schema-attribute"=121
"schema-element"=122
"array-node"=123
"object-node"=124
LITERAL_document="document"=125
SELF=126
XML_COMMENT=127
XML_PI=128
AT=129
PARENT=130
LITERAL_child="child"=131
LITERAL_self="self"=132
LITERAL_descendant="descendant"=133
"descendant-or-self"=134
"following-sibling"=135
LITERAL_parent="parent"=136
LITERAL_ancestor="ancestor"=137
"ancestor-or-self"=138
"preceding-sibling"=139
LPPAREN=140
RPPAREN=141
"number-node"=142
"boolean-node"=143
"null-node"=144
DOUBLE_LITERAL=145
DECIMAL_LITERAL=146
INTEGER_LITERAL=147
END_TAG_START=148
ELEMENT_CONTENT=149
QUOT=150
APOS=151
QUOT_ATTRIBUTE_CONTENT=152
APOS_ATTRIBUTE_CONTENT=153
XQDOC_COMMENT=154
XML_COMMENT_END=155
XML_PI_END=156
XML_CDATA=157
XML_CDATA_END=158
QUESTION=159
"empty-sequence"=160
LITERAL_item="item"=161
NCNAME=162
LITERAL_lax="lax"=163
LITERAL_strict="strict"=164
ANDEQ=165
OREQ=166
XML_PI_START=167
LETTER=168
DIGITS=169
HEX_DIGITS=170
NMSTART=171
NMCHAR=172
WS=173
EXPR_COMMENT=174
PRAGMA_CONTENT=175
PRAGMA_QNAME=176
PREDEFINED_ENTITY_REF=177
CHAR_REF=178
NEXT_TOKEN=179
CHAR=180
BASECHAR=181
IDEOGRAPHIC=182
COMBINING_CHAR=183
DIGIT=184
EXTENDER=185
