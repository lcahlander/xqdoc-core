// $ANTLR : XQuery.g -> XQueryParserTokenTypes.txt$
XQueryParser    // output token vocab name
LITERAL_module="module"=4
LITERAL_xquery="xquery"=5
LITERAL_version="version"=6
STRING_LITERAL=7
LITERAL_import="import"=8
LITERAL_declare="declare"=9
LITERAL_xmlspace="xmlspace"=10
LITERAL_namespace="namespace"=11
LITERAL_default="default"=12
LITERAL_collation="collation"=13
LITERAL_element="element"=14
LITERAL_function="function"=15
LITERAL_define="define"=16
LITERAL_variable="variable"=17
LITERAL_validation="validation"=18
LITERAL_lax="lax"=19
LITERAL_strict="strict"=20
LITERAL_skip="skip"=21
LITERAL_schema="schema"=22
NCNAME=23
EQ=24
LITERAL_at="at"=25
LITERAL_preserve="preserve"=26
LITERAL_strip="strip"=27
DOLLAR=28
LCURLY=29
RCURLY=30
LITERAL_external="external"=31
LPAREN("'('")=32
RPAREN("')'")=33
LITERAL_as="as"=34
COMMA=35
LITERAL_empty="empty"=36
QUESTION=37
STAR=38
PLUS=39
LITERAL_item="item"=40
"document-node"=41
LITERAL_attribute="attribute"=42
"processing-instruction"=43
LITERAL_comment="comment"=44
LITERAL_text="text"=45
LITERAL_node="node"=46
LITERAL_for="for"=47
LITERAL_let="let"=48
LITERAL_some="some"=49
LITERAL_every="every"=50
LITERAL_typeswitch="typeswitch"=51
LITERAL_if="if"=52
LITERAL_try="try"=53
LITERAL_catch="catch"=54
LITERAL_where="where"=55
LITERAL_return="return"=56
LITERAL_in="in"=57
COLON=58
LITERAL_stable="stable"=59
LITERAL_order="order"=60
LITERAL_by="by"=61
LITERAL_ascending="ascending"=62
LITERAL_descending="descending"=63
LITERAL_greatest="greatest"=64
LITERAL_least="least"=65
LITERAL_satisfies="satisfies"=66
LITERAL_case="case"=67
LITERAL_then="then"=68
LITERAL_else="else"=69
LITERAL_or="or"=70
LITERAL_and="and"=71
LITERAL_instance="instance"=72
LITERAL_of="of"=73
LITERAL_treat="treat"=74
LITERAL_castable="castable"=75
LITERAL_cast="cast"=76
LT=77
GT=78
LITERAL_eq="eq"=79
LITERAL_ne="ne"=80
LITERAL_lt="lt"=81
LITERAL_le="le"=82
LITERAL_gt="gt"=83
LITERAL_ge="ge"=84
NEQ=85
GTEQ=86
LTEQ=87
LITERAL_is="is"=88
LITERAL_isnot="isnot"=89
LITERAL_to="to"=90
MINUS=91
LITERAL_div="div"=92
LITERAL_idiv="idiv"=93
LITERAL_mod="mod"=94
LITERAL_union="union"=95
UNION=96
LITERAL_intersect="intersect"=97
LITERAL_except="except"=98
SLASH=99
DSLASH=100
LITERAL_document="document"=101
SELF=102
XML_COMMENT=103
XML_PI=104
LPPAREN=105
RPPAREN=106
AT=107
PARENT=108
LITERAL_property="property"=109
LITERAL_child="child"=110
LITERAL_self="self"=111
LITERAL_descendant="descendant"=112
"descendant-or-self"=113
LITERAL_following="following"=114
"following-sibling"=115
LITERAL_parent="parent"=116
LITERAL_ancestor="ancestor"=117
"ancestor-or-self"=118
LITERAL_preceding="preceding"=119
"preceding-sibling"=120
DOUBLE_LITERAL=121
DECIMAL_LITERAL=122
INTEGER_LITERAL=123
LITERAL_nillable="nillable"=124
END_TAG_START=125
QUOT=126
APOS=127
QUOT_ATTRIBUTE_CONTENT=128
APOS_ATTRIBUTE_CONTENT=129
ELEMENT_CONTENT=130
XML_COMMENT_END=131
XQDOC_COMMENT=132
XML_CDATA=133
XML_CDATA_END=134
XML_PI_END=135
LITERAL_collection="collection"=136
SEMICOLON=137
ANDEQ=138
OREQ=139
XML_PI_START=140
LETTER=141
DIGITS=142
HEX_DIGITS=143
NMSTART=144
NMCHAR=145
WS=146
EXPR_COMMENT=147
PRAGMA=148
PRAGMA_CONTENT=149
PRAGMA_QNAME=150
PREDEFINED_ENTITY_REF=151
CHAR_REF=152
NEXT_TOKEN=153
CHAR=154
BASECHAR=155
IDEOGRAPHIC=156
COMBINING_CHAR=157
DIGIT=158
EXTENDER=159
