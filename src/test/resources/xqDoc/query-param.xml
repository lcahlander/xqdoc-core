<?xml version="1.0" encoding="UTF-8"?>
<xqdoc:xqdoc xmlns:xqdoc="http://www.xqdoc.org/1.0">
    <xqdoc:control>
        <xqdoc:date>Fri Jul 06 02:29:09 EDT 2018</xqdoc:date>
        <xqdoc:version>1.1</xqdoc:version>
    </xqdoc:control>
    <xqdoc:module type="library">
        <xqdoc:uri>http://test.com</xqdoc:uri>
        <xqdoc:name/>
        <xqdoc:body xml:space="preserve">xquery version "3.0";

module namespace test = "http://test.com";

declare namespace rest = "http://exquery.org/ns/restxq";

(: with default params :)
declare
    %rest:GET
    %rest:path("/test")
    %rest:query-param("hello", "{$hello}", "hello", "again")
function test:hello($hello) {
    &lt;hello&gt;{$hello}&lt;/hello&gt;
};

declare
    %rest:GET
    %rest:path("/test1")
    %rest:query-param("hello", "{$hello}", "")
function test:hello1($hello as xs:string+) {
    &lt;hello&gt;{$hello}&lt;/hello&gt;
};

declare
    %rest:GET
    %rest:path("/test2")
    %rest:query-param("hello", "{$hello}", "")
function test:hello2($hello as xs:string*) {
    &lt;hello&gt;{$hello}&lt;/hello&gt;
};

(: must  fail :)
(:
declare
    %rest:GET
    %rest:path("/test3")
    %rest:query-param("hello", "{$hello}", "")
function test:hello3($hello as xs:string?) {
    &lt;hello&gt;{$hello}&lt;/hello&gt;
};
:)
(:
declare
    %rest:GET
    %rest:path("/test4")
    %rest:query-param("hello", "{$hello}", "")
function test:hello4($hello as xs:string) {
    &lt;hello&gt;{$hello}&lt;/hello&gt;
};
:)
(: fail - has additional parameter which does not allow ZERO cardinality! :)
(:
declare
    %rest:GET
    %rest:path("/test5")
    %rest:query-param("hello", "{$hello}", "hello", "again")
function test:hello5($hello, $other as xs:string+) {
    &lt;hello&gt;{$hello}&lt;/hello&gt;
};
:)

(: fail - has two mapped parameters of the same name in different annotations:)
(:
declare
    %rest:GET
    %rest:path("/test6")
    %rest:query-param("hello", "{$hello}", "hello", "again")
    %rest:query-param("hello", "{$hello}")
function test:hello6($hello) {
    &lt;hello&gt;{$hello}&lt;/hello&gt;
};
:)



(: without default params :)
declare
    %rest:GET
    %rest:path("/test7")
    %rest:query-param("hello", "{$hello}")
function test:hello7($hello as xs:string*) {
    &lt;hello&gt;{$hello}&lt;/hello&gt;
};

declare
    %rest:GET
    %rest:path("/test8")
    %rest:query-param("hello", "{$hello}")
function test:hello8($hello) {
    &lt;hello&gt;{$hello}&lt;/hello&gt;
};

(: must fail :)
(:
declare
    %rest:GET
    %rest:path("/test9")
    %rest:query-param("hello", "{$hello}")
function test:hello9($hello as xs:string+) {
    &lt;hello&gt;{$hello}&lt;/hello&gt;
};
:)
(:
declare
    %rest:GET
    %rest:path("/test10")
    %rest:query-param("hello", "{$hello}")
function test:hello10($hello as xs:string?) {
    &lt;hello&gt;{$hello}&lt;/hello&gt;
};
:)
(:
declare
    %rest:GET
    %rest:path("/test11")
    %rest:query-param("hello", "{$hello}")
function test:hello11($hello as xs:string) {
    &lt;hello&gt;{$hello}&lt;/hello&gt;
};
:)
(: fail - has additional parameter which does not allow ZERO cardinality! :)
(:
declare
    %rest:GET
    %rest:path("/test12")
    %rest:query-param("hello", "{$hello}")
function test:hello12($hello, $other as xs:string+) {
    &lt;hello&gt;{$hello}&lt;/hello&gt;
};
:)
(: fail - has two mapped parameters of the same name in different annotations:)
(:
declare
    %rest:GET
    %rest:path("/test13")
    %rest:query-param("hello", "{$hello}")
    %rest:query-param("hello", "{$hello}")
function test:hello13($hello) {
    &lt;hello&gt;{$hello}&lt;/hello&gt;
};
:)

</xqdoc:body>
    </xqdoc:module>
    <xqdoc:functions>
        <xqdoc:function>
            <xqdoc:name>hello</xqdoc:name>
            <xqdoc:annotations>
                <xqdoc:annotation name="rest:GET"/>
                <xqdoc:annotation name="rest:path">
                    <xqdoc:literal>"/test"</xqdoc:literal>
                </xqdoc:annotation>
                <xqdoc:annotation name="rest:query-param">
                    <xqdoc:literal>"hello"</xqdoc:literal>
                    <xqdoc:literal>"{$hello}"</xqdoc:literal>
                    <xqdoc:literal>"hello"</xqdoc:literal>
                    <xqdoc:literal>"again"</xqdoc:literal>
                </xqdoc:annotation>
            </xqdoc:annotations>
            <xqdoc:signature>declare function hello($hello)</xqdoc:signature>
            <xqdoc:body xml:space="preserve">declare function test:hello($hello){
    &lt;hello&gt;{$hello}&lt;/hello&gt;
};</xqdoc:body>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>hello1</xqdoc:name>
            <xqdoc:annotations>
                <xqdoc:annotation name="rest:GET"/>
                <xqdoc:annotation name="rest:path">
                    <xqdoc:literal>"/test1"</xqdoc:literal>
                </xqdoc:annotation>
                <xqdoc:annotation name="rest:query-param">
                    <xqdoc:literal>"hello"</xqdoc:literal>
                    <xqdoc:literal>"{$hello}"</xqdoc:literal>
                    <xqdoc:literal>""</xqdoc:literal>
                </xqdoc:annotation>
            </xqdoc:annotations>
            <xqdoc:signature>declare function hello1($hello as xs:string+)</xqdoc:signature>
            <xqdoc:body xml:space="preserve">declare function test:hello1($hello as xs:string+){
    &lt;hello&gt;{$hello}&lt;/hello&gt;
};</xqdoc:body>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>hello2</xqdoc:name>
            <xqdoc:annotations>
                <xqdoc:annotation name="rest:GET"/>
                <xqdoc:annotation name="rest:path">
                    <xqdoc:literal>"/test2"</xqdoc:literal>
                </xqdoc:annotation>
                <xqdoc:annotation name="rest:query-param">
                    <xqdoc:literal>"hello"</xqdoc:literal>
                    <xqdoc:literal>"{$hello}"</xqdoc:literal>
                    <xqdoc:literal>""</xqdoc:literal>
                </xqdoc:annotation>
            </xqdoc:annotations>
            <xqdoc:signature>declare function hello2($hello as xs:string*)</xqdoc:signature>
            <xqdoc:body xml:space="preserve">declare function test:hello2($hello as xs:string*){
    &lt;hello&gt;{$hello}&lt;/hello&gt;
};</xqdoc:body>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>hello7</xqdoc:name>
            <xqdoc:annotations>
                <xqdoc:annotation name="rest:GET"/>
                <xqdoc:annotation name="rest:path">
                    <xqdoc:literal>"/test7"</xqdoc:literal>
                </xqdoc:annotation>
                <xqdoc:annotation name="rest:query-param">
                    <xqdoc:literal>"hello"</xqdoc:literal>
                    <xqdoc:literal>"{$hello}"</xqdoc:literal>
                </xqdoc:annotation>
            </xqdoc:annotations>
            <xqdoc:signature>declare function hello7($hello as xs:string*)</xqdoc:signature>
            <xqdoc:body xml:space="preserve">declare function test:hello7($hello as xs:string*){
    &lt;hello&gt;{$hello}&lt;/hello&gt;
};</xqdoc:body>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>hello8</xqdoc:name>
            <xqdoc:annotations>
                <xqdoc:annotation name="rest:GET"/>
                <xqdoc:annotation name="rest:path">
                    <xqdoc:literal>"/test8"</xqdoc:literal>
                </xqdoc:annotation>
                <xqdoc:annotation name="rest:query-param">
                    <xqdoc:literal>"hello"</xqdoc:literal>
                    <xqdoc:literal>"{$hello}"</xqdoc:literal>
                </xqdoc:annotation>
            </xqdoc:annotations>
            <xqdoc:signature>declare function hello8($hello)</xqdoc:signature>
            <xqdoc:body xml:space="preserve">declare function test:hello8($hello){
    &lt;hello&gt;{$hello}&lt;/hello&gt;
};</xqdoc:body>
        </xqdoc:function>
    </xqdoc:functions>
</xqdoc:xqdoc>

